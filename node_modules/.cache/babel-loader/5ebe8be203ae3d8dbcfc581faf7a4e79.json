{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\Documents\\\\DevWeb\\\\React\\\\movies-react-app\\\\src\\\\components\\\\MoviesGrid.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { MovieCard } from \"./MovieCard\";\nimport styles from \"../styles/MoviesGrid.module.css\";\nimport { get } from \"../utils/httpClient\";\nimport { Spinner } from \"./Spinner\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  return new URLSearchParams(useLocation().search);\n}\n\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\nexport function MoviesGrid() {\n  _s2();\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const query = useQuery();\n  const search = query.get(\"search\");\n  console.log(search);\n  useEffect(() => {\n    setIsLoading(true);\n    const searchUrl = search ? \"/search/movie?=query=\" + search : get(\"/discover/movie\").then(data => {\n      setMovies(data.results);\n      setIsLoading(false);\n    });\n  }, [search]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.moviesGrid,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      movie: movie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(MoviesGrid, \"dq3NNRXqxJi6UHY0CR8JvPuWxdI=\", false, function () {\n  return [useQuery];\n});\n\n_c = MoviesGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesGrid\");","map":{"version":3,"sources":["C:/Users/Tom/Documents/DevWeb/React/movies-react-app/src/components/MoviesGrid.js"],"names":["useEffect","useState","MovieCard","styles","get","Spinner","useLocation","useQuery","URLSearchParams","search","MoviesGrid","movies","setMovies","isLoading","setIsLoading","query","console","log","searchUrl","then","data","results","moviesGrid","map","movie","id"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,GAAT,QAAoB,qBAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,SAAO,IAAIC,eAAJ,CAAoBF,WAAW,GAAGG,MAAlC,CAAP;AACH;;GAFQF,Q;UACsBD,W;;;AAG/B,OAAO,SAASI,UAAT,GAAsB;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMc,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAME,MAAM,GAAGM,KAAK,CAACX,GAAN,CAAU,QAAV,CAAf;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMI,SAAS,GAAGT,MAAM,GAAG,0BAA2BA,MAA9B,GACxBL,GAAG,CAAC,iBAAD,CAAH,CAAuBe,IAAvB,CAA6BC,IAAD,IAAU;AAClCR,MAAAA,SAAS,CAACQ,IAAI,CAACC,OAAN,CAAT;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAHD,CADA;AAKH,GAPQ,EAON,CAACL,MAAD,CAPM,CAAT;;AASA,MAAII,SAAJ,EAAe;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACmB,UAAvB;AAAA,cACKX,MAAM,CAACY,GAAP,CAAYC,KAAD,iBACR,QAAC,SAAD;AAA0B,MAAA,KAAK,EAAEA;AAAjC,OAAgBA,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IA3Bef,U;UAIEH,Q;;;KAJFG,U","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { MovieCard } from \"./MovieCard\";\r\nimport styles from \"../styles/MoviesGrid.module.css\";\r\nimport { get } from \"../utils/httpClient\";\r\nimport { Spinner } from \"./Spinner\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport function MoviesGrid() {\r\n    const [movies, setMovies] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const query = useQuery();\r\n    const search = query.get(\"search\");\r\n    console.log(search);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const searchUrl = search ? \"/search/movie?=query=\" +  search :\r\n        get(\"/discover/movie\").then((data) => {\r\n            setMovies(data.results);\r\n            setIsLoading(false);\r\n        });\r\n    }, [search]);\r\n\r\n    if (isLoading) {\r\n        return <Spinner/>\r\n    }\r\n    return (\r\n        <ul  className={styles.moviesGrid}>\r\n            {movies.map((movie) => (\r\n                <MovieCard key={movie.id} movie={movie}/>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}