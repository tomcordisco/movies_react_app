{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\Documents\\\\DevWeb\\\\React\\\\movies-react-app\\\\src\\\\components\\\\MoviesGrid.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { MovieCard } from \"./MovieCard\";\nimport styles from \"../styles/MoviesGrid.module.css\";\nimport { get } from \"../utils/httpClient\";\nimport { Spinner } from \"./Spinner\";\nimport { useQuery } from \"../hooks/useQuery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MoviesGrid() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const query = useQuery();\n  const search = query.get(\"search\");\n  useEffect(() => {\n    setIsLoading(true);\n    const searchUrl = search ? \"/search/movie?query=\" + search : \"/discover/movie\";\n    get(searchUrl).then(data => {\n      setMovies(data.results);\n      setIsLoading(false);\n    });\n  }, [search]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.moviesGrid,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      movie: movie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoviesGrid, \"dq3NNRXqxJi6UHY0CR8JvPuWxdI=\", false, function () {\n  return [useQuery];\n});\n\n_c = MoviesGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesGrid\");","map":{"version":3,"sources":["C:/Users/Tom/Documents/DevWeb/React/movies-react-app/src/components/MoviesGrid.js"],"names":["useEffect","useState","MovieCard","styles","get","Spinner","useQuery","MoviesGrid","movies","setMovies","isLoading","setIsLoading","query","search","searchUrl","then","data","results","moviesGrid","map","movie","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,GAAT,QAAoB,qBAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMW,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAMO,MAAM,GAAGD,KAAK,CAACR,GAAN,CAAU,QAAV,CAAf;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMG,SAAS,GAAGD,MAAM,GACtB,yBAAyBA,MADH,GAEtB,iBAFF;AAGAT,IAAAA,GAAG,CAACU,SAAD,CAAH,CAAeC,IAAf,CAAqBC,IAAD,IAAU;AAC1BP,MAAAA,SAAS,CAACO,IAAI,CAACC,OAAN,CAAT;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAHD;AAIH,GATQ,EASN,CAACE,MAAD,CATM,CAAT;;AAWA,MAAIH,SAAJ,EAAe;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACe,UAAvB;AAAA,cACKV,MAAM,CAACW,GAAP,CAAYC,KAAD,iBACR,QAAC,SAAD;AAA0B,MAAA,KAAK,EAAEA;AAAjC,OAAgBA,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5Bed,U;UAIED,Q;;;KAJFC,U","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { MovieCard } from \"./MovieCard\";\r\nimport styles from \"../styles/MoviesGrid.module.css\";\r\nimport { get } from \"../utils/httpClient\";\r\nimport { Spinner } from \"./Spinner\";\r\nimport { useQuery } from \"../hooks/useQuery\";\r\n\r\nexport function MoviesGrid() {\r\n    const [movies, setMovies] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const query = useQuery();\r\n    const search = query.get(\"search\");\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const searchUrl = search \r\n        ? \"/search/movie?query=\" + search \r\n        : \"/discover/movie\";\r\n        get(searchUrl).then((data) => {\r\n            setMovies(data.results);\r\n            setIsLoading(false);\r\n        });\r\n    }, [search]);\r\n\r\n    if (isLoading) {\r\n        return <Spinner />;\r\n    }\r\n    return (\r\n        <ul  className={styles.moviesGrid}>\r\n            {movies.map((movie) => (\r\n                <MovieCard key={movie.id} movie={movie}/>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}